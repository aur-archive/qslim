diff -Naur qslim-2.1-old/libgfx/src/raster.cxx qslim-2.1-new/libgfx/src/raster.cxx
--- qslim-2.1-old/libgfx/src/raster.cxx	2002-01-27 04:01:35.000000000 +0000
+++ qslim-2.1-new/libgfx/src/raster.cxx	2008-05-28 06:19:10.000000000 +0100
@@ -9,7 +9,7 @@
 #include <gfx/gfx.h>
 #include <gfx/raster.h>
 
-#include <string>
+#include <cstring>
 #include <cctype>
 
 ByteRaster::ByteRaster(const ByteRaster &img)
diff -Naur qslim-2.1-old/mixkit/src/MxDynBlock.h qslim-2.1-new/mixkit/src/MxDynBlock.h
--- qslim-2.1-old/mixkit/src/MxDynBlock.h	2004-07-01 19:38:41.000000000 +0100
+++ qslim-2.1-new/mixkit/src/MxDynBlock.h	2008-05-28 06:28:51.000000000 +0100
@@ -35,7 +35,7 @@
 
     void room_for(int len)
     {
-	if( length()<len ) resize(len);
+	if( length()<len ) this->resize(len);
 	fill = len;
     }
 
@@ -62,8 +62,8 @@
     //
     int size() const { return length(); }
 
-    typename MxBlock<T>::iterator end()       { return begin()+size(); }
-    typename MxBlock<T>::const_iterator end() const { return begin()+size(); }
+    typename MxBlock<T>::iterator end()       { return this->begin()+size(); }
+    typename MxBlock<T>::const_iterator end() const { return this->begin()+size(); }
 
     void push_back(const T& t) { add(t); }
 };
diff -Naur qslim-2.1-old/mixkit/src/MxStack.h qslim-2.1-new/mixkit/src/MxStack.h
--- qslim-2.1-old/mixkit/src/MxStack.h	2000-11-20 20:36:38.000000000 +0000
+++ qslim-2.1-new/mixkit/src/MxStack.h	2008-05-28 06:31:34.000000000 +0100
@@ -26,12 +26,12 @@
     MxStack(const T& val, unsigned int n) : MxDynBlock<T>(n)
 	{ push(val); }
 
-    T&       top()       { return last(); }
-    const T& top() const { return last(); }
+    T&       top()       { return this->last(); }
+    const T& top() const { return this->last(); }
 
-    bool is_empty() { return length()==0; }
+    bool is_empty() { return this->length()==0; }
 
-    T& pop() { return drop(); }
+    T& pop() { return this->drop(); }
 
     void push(const T& val) { add(val); }
     //
@@ -41,7 +41,7 @@
     //       broken!  The top() will grab a pointer into the block,
     //       but the add() may reallocate the block before doing the
     //       assignment.  Thus, the pointer will become invalid.
-    void push() { add(); top() = (*this)[length()-2]; }
+    void push() { this->add(); top() = (*this)[this->length()-2]; }
 };
 
 // MXSTACK_INCLUDED
